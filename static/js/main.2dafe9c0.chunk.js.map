{"version":3,"sources":["Statistics/Statistics.js","FeedbackOptins/FeedbackOptions.js","Section/Section.js","Notification/Notification.js","Feedback/Feedback.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","onIncrementGood","onIncrementNeutral","onIncrementBad","type","onClick","Section","props","title","children","Notification","message","Feedback","useState","setGood","setNeutral","setBad","Math","round","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAqBeA,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,sBAAKC,UAAU,aAAf,UACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCSOE,G,KAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,mBAAoBC,EAAxC,EAAwCA,eAAxC,OACpB,sBAAKJ,UAAU,qBAAf,UACI,wBAAQA,UAAU,WAAWK,KAAK,SAASC,QAASJ,EAApD,kBACA,wBAAQF,UAAU,WAAWK,KAAK,SAASC,QAASH,EAApD,qBACA,wBAAQH,UAAU,WAAWK,KAAK,SAASC,QAASF,EAApD,sBCMOG,EAXC,SAACC,GAAD,OACZ,oCACI,6BAAKA,EAAMC,QACVD,EAAME,aCKAC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,K,KCGO,SAASC,IACpB,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KAcMnB,EAAQH,EAAOC,EAAUC,EACzBE,EAAqBmB,KAAKC,MAAMxB,EAAOG,EAAQ,KAErD,OACI,sBAAKE,UAAU,WAAf,UACA,cAAC,EAAD,CAASS,MAAM,wBAAf,SACI,cAAC,EAAD,CACAP,gBAnBmB,WACvBa,GAAQ,SAACK,GAAD,OAAeA,EAAY,MAmB/BjB,mBAhBsB,WAC1Ba,GAAW,SAACI,GAAD,OAAeA,EAAY,MAgBlChB,eAbkB,WACtBa,GAAO,SAACG,GAAD,OAAeA,EAAY,UAgBlC,cAAC,EAAD,CAASX,MAAM,aAAf,SACKX,EACG,cAAC,EAAD,CACAH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAEpB,OAEPD,EAAQ,KAAO,cAAC,EAAD,CAAcc,QAAQ,yBC9C9C,IAQeS,EARH,WACV,OAEI,cAAC,EAAD,K,cCCNC,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2dafe9c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div className=\"statistics\">\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positivePercentage}%</p> \r\n    </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ onIncrementGood, onIncrementNeutral, onIncrementBad }) => (\r\n    <div className=\"Feedback__controls\">\r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementGood}>Good</button>\r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementNeutral}>Neutral</button> \r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementBad}>Bad</button>  \r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    onIncrementGood: PropTypes.func.isRequired,\r\n    onIncrementNeutral: PropTypes.func.isRequired,\r\n    onIncrementBad: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';;\r\n\r\nconst Section = (props) => (\r\n    <section>\r\n        <h2>{props.title}</h2>\r\n        {props.children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import { useState } from 'react';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedBackOptions from '../FeedbackOptins/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\nimport './Feedback.css';\r\n\r\nexport default function Feedback() {\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n    \r\n    const countIncrementGood = () => {\r\n        setGood((prevState) => prevState + 1);\r\n    };\r\n\r\n    const countIncrementNeutral = () => {\r\n        setNeutral((prevState) => prevState + 1);\r\n    };\r\n    \r\n    const countIncrementBad = () => {\r\n        setBad((prevState) => prevState + 1);\r\n    };\r\n    \r\n    const total = good + neutral + bad;\r\n    const positivePercentage = Math.round(good / total * 100)\r\n\r\n    return (\r\n        <div className=\"feedback\">\r\n        <Section title=\"Please leave feedback\">\r\n            <FeedBackOptions\r\n            onIncrementGood={countIncrementGood}\r\n            onIncrementNeutral={countIncrementNeutral}\r\n            onIncrementBad={countIncrementBad}\r\n            />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n            {total ? (\r\n                <Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={total}\r\n                positivePercentage={positivePercentage}\r\n                />\r\n            ) : null}\r\n        </Section>\r\n        {total ? null : <Notification message=\"No feedback given\" />}\r\n        </div>\r\n    );\r\n}","import Feedback from './Feedback/Feedback';\n\nconst App = () => {\n  return (\n  \n      <Feedback />\n    \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}